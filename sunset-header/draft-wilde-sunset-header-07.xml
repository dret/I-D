<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc symrefs="yes" ?>
<rfc category="std" ipr="trust200902" docName="draft-wilde-sunset-header-07">
   <front>
      <title abbrev="Sunset Header">The Sunset HTTP Header</title>
      <author initials="E." surname="Wilde" fullname="Erik Wilde">
         <organization>CA Technologies</organization>
         <address>
            <email>erik.wilde@dret.net</email>
            <uri>http://dret.net/netdret/</uri>
         </address>
      </author>
      <date day="17" month="July" year="2018"/>
      <abstract>
         <t>This specification defines the Sunset HTTP response header field, which indicates that a URI is likely to become unresponsive at a specified point in the future. It also defines a sunset link relation type that allows linking to resources providing information about an upcoming resource or service sunset.</t>
      </abstract>
      <note title="Note to Readers">
         <t>This draft should be discussed on the ART mailing list (<eref target="https://www.ietf.org/mailman/listinfo/art"/>).</t>
         <t>Online access to all versions and files is available on GitHub (<eref target="https://github.com/dret/I-D/tree/master/sunset-header"/>).</t>
      </note>
   </front>
   <middle>
      <section title="Introduction" anchor="introduction">
         <t>As a general rule, URIs should be stable and persistent, so that applications can use them as stable and persistent identifiers for resources. However, there are many scenarios where for a variety of reasons, URIs have a limited lifetime. In some of these scenarios, this limited lifetime is known in advance. In this case, it can be useful for clients if resources make this information about their limited lifetime known. This specification defines the Sunset HTTP response header field, which indicates that a URI is likely to become unresponsive at a specified point in the future.</t>
         <t>This specification also defines a link relation type "sunset" that allows to provide information about a resource's or a service's sunset policy, and/or upcoming sunsets, and/or possible mitigation scenarios for resource/service users. This specification does not place any constraints on the nature of the linked resource, which can be targeted at humans, at machines, or a combination of both.</t>
         <t>Possible scenarios for known lifetimes of resources include, but are not limited to the following scenarios.</t>
         <section title="Temporary Resources" anchor="temporary-resources">
            <t>Some resources may have a limited lifetime by definition. For example, a pending order represented by a resource may already list all the details of the order, but may only exist for a limited time unless it is confirmed and only then becomes permanent. In such a case, the service managing the pending order can make this limited lifetime explicit, allowing clients to understand that the pending order, unless confirmed, will disappear at some point in time.</t>
         </section>
         <section title="Migration" anchor="migration">
            <t>If resources are changing identity because a service migrates them, then this may be known in advance. While it may not yet be appropriate to use HTTP redirect status codes (3xx), it may be interesting for clients to learn about the service's plan to take down the original resource.</t>
         </section>
         <section title="Retention" anchor="retention">
            <t>There are many cases where regulation or legislation require that resources are kept available for a certain amount of time. However, in many cases there also is a requirement for those resources to be permanently deleted after some period of time. Since the deletion of the resource in this scenario is governed by well-defined rules, it could be made explicit for clients interacting with the resource.</t>
         </section>
         <section title="Deprecation" anchor="deprecation">
            <t>For Web APIs one standard scenario is that an API or specific subsets of an API may get deprecated. If this is planned in advance, then for the time before the actual deprecation is rolled out, the resources that will be affected by the deprecation can make the date of their deprecation known. This allows consumers of the API to be notified of the upcoming deprecation.</t>
            <t>In this scenario, the announced sunset date typically affects the whole API or parts of it (i.e., sets of resources), and not just a single resource. In this case, it makes sense for the API to define rules how an announced sunset on a specific resource (such as the API's home/start resource) implies the sunsetting of the whole API or parts of it (i.e., sets of resources), and not just the resource returning the sunset header field. Section <xref target="sunset-scope"/> discusses how the scope of the Sunset header field may change because of how a resource is using it.</t>
         </section>
      </section>
      <section title="Terminology">
         <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>
      </section>
      <section title="The Sunset HTTP Response Header" anchor="sunset-header">
         <t>The Sunset HTTP response header field allows a server to communicate the fact that a resource is expected to become unresponsive at a specific point in time. It provides information for clients which they can use to control their usage of the resource.</t>
         <t>The Sunset header contains a single timestamp which advertises the point in time when the resource is expected to become unresponsive. The Sunset value is an HTTP-date timestamp, as defined in Section 7.1.1.1 of <xref target="RFC7231"/>, and SHOULD be a timestamp in the future.</t>
         <t>Timestamps in the past SHOULD be considered to mean the present time, meaning that the resource is expected to become unavailable at any point in time.</t>
         <figure>
            <artwork type="abnf">Sunset = HTTP-date</artwork>
         </figure>
         <t>For example</t>
         <figure>
            <artwork>Sunset: Sat, 31 Dec 2018 23:59:59 GMT</artwork>
         </figure>
         <t>Clients SHOULD treat Sunset timestamps as hints: It is not guaranteed that the resource will in fact be available until that time, and will not be available after that time. However, since this information is provided by the resource itself, it does have some credibility.</t>
         <t>After the Sunset time has arrived, it is likely that interactions with the resource will result in client-side errors (HTTP 4xx status codes), redirect responses (HTTP 3xx status codes), or the client might not be able to interact with the resource at all. The Sunset header does not expose any information about which of those behaviors can be expected.</t>
         <t>Clients not interpreting an existing Sunset header field can operate as usual and simply may experience the resource becoming unavailable without getting any notification about it beforehand.</t>
      </section>
      <section title="Sunset and Caching" anchor="sunset-and-caching">
         <t>It should be noted that the Sunset HTTP response header field serves a different purpose than HTTP caching <xref target="RFC7234"/>. HTTP caching is concerned with making resource representations (i.e., represented resource state) reusable, so that they can be more efficiently used. This is achieved by using header fields that allow clients and intermediaries to better understand when a resource representation can be reused, or when resource state (and thus the representation) may have changed.</t>
         <t>The Sunset header field is not concerned with resource state at all. It only signals that a resource is expected to become unavailable at a specific point in time. There are no assumptions about if, when, or how often a resource may change state in the meantime.</t>
         <t>For these reasons, the Sunset header field and HTTP caching should be seen as complementary, and not as overlapping in scope and functionality.</t>
      </section>
      <section title="Sunset Scope" anchor="sunset-scope">
         <t>The Sunset header field applies to the resource that returns it, meaning that it announces the upcoming sunset of that specific resources. However, as discussed in Section <xref target="deprecation"/>, there may be scenarios where the scope of the announced Sunset information it larger than just the single resource where it appears.</t>
         <t>Resources are free to define such an increased scope, and usually this scope will be documented by the resource, so that consumers of the resource know about the increased scope and can behave accordingly. However, it is important to take into account that such increased scoping is invisible for consumers who are unaware of the increased scoping rules. This means that these consumers will not be aware of the increased scope, and will not interpret Sunset information different from its standard meaning (i.e., it applies to the resource only).</t>
         <t>Using such an increased scope still may make sense, as Sunset information is only a hint anyway, and thus is optional information that cannot be depended on, and clients should always be implemented in ways that allow them to function without Sunset information. Increased scope information may help clients to glean additional hints from resources (e.g., concluding that an API is being deprecated because its home/start resource announces a Sunset), and thus might allow them to implement behavior that allows them to make educated guesses about resources becoming unavailable.</t>
      </section>
      <section title="The Sunset Link Relation Type" anchor="sunset-link-relation">
         <t>The Sunset HTTP header field indicates the upcoming retirement of a resource or a service. In addition, resource may want to make information available that provides additional information about how retirement will be handled for resources or services. This information can be broadly described by the following three topics:</t>
         <t>
            <list>
               <t>Sunset policy: The policy for which resources and in which way sunsets may occur may be published as part of service's description. Sunsets may only/mostly affect a subset of a service's resources, and may be exposed according to a certain policy (e.g., one week in advance).</t>
               <t>Upcoming sunset: There may be additional information about an upcoming sunset, which can be published as a resource that can be consumed by those looking for this additional information.</t>
               <t>Sunset mitigation: There may be information about possible mitigation/migration strategies, such as possible ways how resource users can switch to alternative resources/services.</t>
            </list>
         </t>
         <t>Any information regarding the above issues (and possibly additional ones) can be made available through a URI that then can be linked to using the sunset link relation type. This specification places no constraints on the scope or the type of the linked resource. The scope can be for a resource or for a service. The type is determined by the media type of the linked resource, and can be targeted at humans, at machines, or a combination of both.</t>
      </section>
      <section title="IANA Considerations" anchor="iana">
         <section title="The Sunset Response Header" anchor="iana-sunset">
            <t>The Sunset response header should be added to the permanent registry of message header fields (see <xref target="RFC3864"/>), taking into account the guidelines given by HTTP/1.1 <xref target="RFC7231"/>.</t>
            <t>
               <list>
                  <t>Header Field Name: Sunset</t>
                  <t>Applicable Protocol: Hypertext Transfer Protocol (HTTP)</t>
                  <t>Status: Standard</t>
                  <t>Author/Change controller: IETF</t>
                  <t>Specification document(s): RFC XXXX</t>
               </list>
            </t>
         </section>
         <section title="The Sunset Link Relation Type" anchor="security-link-relation">
            <t>The sunset link relation type should be added to the permanent registry of link relation types according to Section 4.2 of RFC 8288 <xref target="RFC8288"/>:</t>
            <t>
               <list>
                  <t>Relation Name: sunset</t>
                  <t>Description: Linking to a resource providing information about a resource's or service's retirement policy and/or information.</t>
                  <t>Reference: RFC XXXX</t>
               </list>
            </t>
         </section>
      </section>
      <section title="Implementation Status" anchor="implementation-status">
         <!--
RFC 6982: This section, if it appears, should be located just before the "Security Considerations" section and contain, for each existing implementation, some or all of the following:
 -  The organization responsible for the implementation, if any.
 -  The implementation's name and/or a link to a web page describing the implementation.
 -  A brief general description.
 -  The implementation's level of maturity: research, prototype, alpha, beta, production, widely used, etc.
 -  Coverage: which parts of the protocol specification are implemented and which versions of the Internet-Draft were implemented.
 -  Licensing: the terms under which the implementation can be used. For example: proprietary, royalty licensing, freely distributable with acknowledgement (BSD style), freely distributable with requirement to redistribute source (General Public License (GPL) style), and other (specify).
 -  Implementation experience: any useful information the implementers want to share with the community.
 -  Contact information: ideally a person's name and email address, but possibly just a URL or mailing list.
         <section title="" anchor="implementation-">
            <t>
               <list>
                  <t>Organization: </t>
                  <t>Name: </t>
                  <t>Description: </t>
                  <t>Maturity: </t>
                  <t>Coverage: </t>
                  <t>Licensing: </t>
                  <t>Implementation Experience: </t>
                  <t>Contact: </t>
               </list>
            </t>
         </section>
-->
         <t>Note to RFC Editor: Please remove this section before publication.</t>
         <t>This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in RFC 6982 <xref target="RFC6982"/>. The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs. Please note that the listing of any individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors. This is not intended as, and must not be construed to be, a catalog of available implementations or their features. Readers are advised to note that other implementations may exist.</t>
         <t>According to RFC 6982, "this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature. It is up to the individual working groups to use this information as they see fit".</t>
         <t>
            <list>
               <t>
                  <list>
                     <t>Name: https://github.com/hskrasek/guzzle-sunset</t>
                     <t>Licensing: MIT</t>
                  </list>
               </t>
               <t>
                  <list>
                     <t>Organization: WeWork</t>
                     <t>Name: https://github.com/wework/faraday-sunset</t>
                     <t>Licensing: MIT</t>
                     <t>Description: A Ruby gem adding HTTP client middleware for Sunset to Faraday</t>
                  </list>
               </t>
               <t>
                  <list>
                     <t>Organization: WeWork</t>
                     <t>Name: https://github.com/wework/rails-sunset</t>
                     <t>Licensing: MIT</t>
                     <t>Description: Create shortcuts for backend developers to use Sunset (The Rails Way).</t>
                  </list>
               </t>
               <t>
                  <list>
                     <t>Organization: Tyk Technologies</t>
                     <t>Name: https://github.com/TykTechnologies/tyk</t>
                     <t>Licensing: Mozilla Public License Version 2.0</t>
                     <t>Description: Configurable HTTP header for API version expiry. (<eref target="https://github.com/TykTechnologies/tyk/issues/1626">GitHub issue</eref>)</t>
                  </list>
               </t>
            </list>
         </t>
      </section>
      <section title="Security Considerations" anchor="security-considerations">
         <t>The Sunset header field should be treated as a resource hint, meaning that the resource is indicating its potential retirement. The definitive test whether or not the resource in fact is available or not will be to attempt to interact with it. Applications should never treat an advertised Sunset date as a definitive prediction that is going to happen at the specified point in time. The Sunset indication may have been inserted by an intermediary, or the advertised date may get changed or withdrawn by the resource owner.</t>
         <t>The main purpose of the Sunset header field is to signal intent, so that applications using resources may get a warning ahead of time and can react accordingly. What an appropriate reaction is (such as switching to a different resource or service), what it will be based on (such as machine-readable formats that allow the switching to be done automatically), and when it will happen (such as ahead of the advertised date or only when the resource in fact becomes unavailable) is outside the scope of this specification.</t>
      </section>
      <section title="Example" anchor="example">
         <t>Assuming that a resource has been created in an archive that for management or compliance reasons only stores resources for two years, and permanently deletes them afterwards, then the Sunset header field can be used to expose this information. If such a resource has been created on November 11, 2016, then the following header field can be included in responses:</t>
         <figure>
            <artwork>Sunset: Fri, 11 Nov 2018 11:11:11 GMT</artwork>
         </figure>
         <t>This allows clients that are aware of the Sunset header field to understand that the resource likely will become unavailable at the specified point in time. Clients can decide to ignore this information, adjust their own behavior accordingly, or alert applications or users about this timestamp.</t>
         <t>Even though the Sunset header information is made available by the resource itself, there is no guarantee that the resource indeed will become unavailable, and if so, how the response will look like for requests made after that timestamp. In case of the archive used as an example here, the resource indeed may be permanently deleted, and requests for the URI after the Sunset timestamp may receive a "410 Gone" HTTP response. (This is assuming that the archive keeps track of the URIs that it had previously assigned; if not, the response may be a more generic "404 Not Found".)</t>
      </section>
   </middle>
   <back>
      <references title="Normative References">
         <reference anchor="RFC2119">
            <front>
               <title abbrev="RFC Key Words">Key words for use in RFCs to Indicate Requirement Levels</title>
               <author initials="S." surname="Bradner" fullname="Scott Bradner">
                  <organization>Harvard University</organization>
                  <address>
                     <postal>
                        <street>1350 Mass. Ave.</street>
                        <street>Cambridge</street>
                        <street>MA 02138</street>
                     </postal>
                     <phone>- +1 617 495 3864</phone>
                  </address>
               </author>
               <date month="March" year="1997"/>
            </front>
            <seriesInfo name="RFC" value="2119"/>
         </reference>
         <reference anchor='RFC3864'>
            <front>
               <title>Registration Procedures for Message Header Fields</title>
               <author initials='G.' surname='Klyne' fullname='G. Klyne'>
                  <organization /></author>
               <author initials='M.' surname='Nottingham' fullname='M. Nottingham'>
                  <organization /></author>
               <author initials='J.' surname='Mogul' fullname='J. Mogul'>
                  <organization /></author>
               <date year='2004' month='September' />
               <abstract>
                  <t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
               </abstract>
            </front>
            <seriesInfo name='BCP' value='90' />
            <seriesInfo name='RFC' value='3864' />
            <format type='TXT' octets='36231' target='http://www.rfc-editor.org/rfc/rfc3864.txt' />
         </reference>
         <reference anchor='RFC7231'>
            <front>
               <title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
               <author initials='R.' surname='Fielding' fullname='R. Fielding'>
                  <organization />
               </author>
               <author initials='J.' surname='Reschke' fullname='J. Reschke'>
                  <organization />
               </author>
               <date year='2014' month='June' />
               <abstract>
                  <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t>
               </abstract>
            </front>
            <seriesInfo name='RFC' value='7231' />
            <format type='TXT' octets='235053' target='http://www.rfc-editor.org/rfc/rfc7231.txt' />
         </reference>
         <reference anchor="RFC8288" target="https://www.rfc-editor.org/info/rfc8288">
            <front>
               <title>Web Linking</title>
               <author initials="M." surname="Nottingham" fullname="M. Nottingham">
                  <organization/>
               </author>
               <date year="2017" month="October"/>
               <abstract>
                  <t>This specification defines a model for the relationships between resources on the Web ("links") and the type of those relationships ("link relation types").</t>
                  <t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t>
               </abstract>
            </front>
            <seriesInfo name="RFC" value="8288"/>
            <seriesInfo name="DOI" value="10.17487/RFC8288"/>
         </reference>
      </references>
      <references title="Informative References">
         <reference anchor='RFC7234'>
            <front>
               <title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
               <author initials='R.' surname='Fielding' fullname='R. Fielding'>
                  <organization />
               </author>
               <author initials='M.' surname='Nottingham' fullname='M. Nottingham'>
                  <organization />
               </author>
               <author initials='J.' surname='Reschke' fullname='J. Reschke'>
                  <organization />
               </author>
               <date year='2014' month='June' />
               <abstract>
                  <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t>
               </abstract>
            </front>
            <seriesInfo name='RFC' value='7234' />
            <format type='TXT' octets='90647' target='http://www.rfc-editor.org/rfc/rfc7234.txt' />
         </reference>
         <reference anchor='RFC6982'>
            <front>
               <title>Improving Awareness of Running Code: The Implementation Status Section</title>
               <author initials='Y.' surname='Sheffer' fullname='Y. Sheffer'>
                  <organization /></author>
               <author initials='A.' surname='Farrel' fullname='A. Farrel'>
                  <organization /></author>
               <date year='2013' month='July' />
               <abstract>
                  <t>This document describes a simple process that allows authors of Internet-Drafts to record the status of known implementations by including an Implementation Status section. This will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.&lt;/t>&lt;t> The process in this document is offered as an experiment. Authors of Internet-Drafts are encouraged to consider using the process for their documents, and working groups are invited to think about applying the process to all of their protocol specifications. The authors of this document intend to collate experiences with this experiment and to report them to the community.</t>
               </abstract>
            </front>
            <seriesInfo name='RFC' value='6982' />
            <format type='TXT' octets='19358' target='http://www.rfc-editor.org/rfc/rfc6982.txt' />
         </reference>
      </references>
      <section title="Acknowledgements" anchor="acknowledgements">
         <t>Thanks for comments and suggestions provided by Phil Sturgeon and Asbjoern Ulsberg.</t>
      </section>
   </back>
</rfc>
