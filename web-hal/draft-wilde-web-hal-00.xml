<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc sortrefs="yes" ?>
<?rfc symrefs="yes" ?>
<rfc category="info" ipr="trust200902" docName="draft-wilde-web-hal-00">
    <front>
        <title abbrev="WebHAL">WebHAL: A HAL Profile for Web Compatibility</title>
        <author initials="E." surname="Wilde" fullname="Erik Wilde">
            <organization/>
            <address>
                <email>erik.wilde@dret.net</email>
                <uri>http://dret.net/netdret/</uri>
            </address>
        </author>
        <date day="1" month="January" year="2018"/>
        <abstract>
            <t>The Hypertext Application Language (HAL) is a simple JSON-based vocabulary for representing hypermedia using JSON. One particular feature of HAL makes the language problematic in environments where it is important that link relation types are always interpreted in a consistent way. WebHAL is a profile that disallows this problematic feature (which is optional to use in HAL), and thus makes link relation types well-defined for environments where Web Linking semantics according to RFC 8288 are required. WebHAL is defined as a profile of HAL, which means that every WebHAL document is a HAL document. WebHAL also defines a process how any HAL document can be transformed into a WebHAL document.</t>
        </abstract>
        <note title="Note to Readers">
            <t>Please discuss this draft on the ART mailing list (<eref target="https://www.ietf.org/mailman/listinfo/art"/>).</t>
            <t>Online access to all versions and files is available on GitHub (<eref target="https://github.com/dret/I-D/tree/master/web-hal"/>).</t>
        </note>
    </front>
    <middle>
        <section title="Introduction" anchor="introduction">
            <t>The Hypertext Application Language (HAL) is a simple JSON-based document format that combines general-purpose JSON data representation with conventions about how to represent links. It defines a separation of links and data, supports embedded resources, and also supports a shorthand mechanism so that links that use link relations identified by URIs can use a shorthand notation.</t>
            <t>HAL has seen quite a bit of adoption as a general-purpose hypermedia format, and that can be in part attributed to its simplicity. However, because of this simplicity it allows client-side behavior which has implications for the interpretation of link relation identifiers. It allows those identifiers to be interpreted in more than one way, which results in different clients having different interpretations of the hyperlinks, resulting in differing resource semantics based on which of the allowed methods clients implement.</t>
            <t>In scenarios where it is required that clients end up with a consistent interpretation of hyperlinks, such as when for example Web Linking <xref target="RFC8288"/> is part of the picture and hyperlinks should be consistently identified by either registered relation types (simple strings) or extension relation types (URIs), it is possible to define and use a subset of HAL that is avoids those mechanisms that introduce semantic ambiguity.</t>
            <t>This memo defines a subset of HAL which is technically defined as a profile <xref target="RFC6906"/> which can be identified by a media type parameter and/or a property in the HAL representation itself. This subset is called WebHAL and is specifically intended to work well in scenarios where Web Linking is in use, and where the representation of hyperlinks should be free of any ambiguities.</t>
        </section>
        <section title="Terminology" anchor="terminology">
            <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>
        </section>
        <section title="Problem Statement" anchor="problem-statement">
            <t>HAL is meant as a simple JSON-based way how services and consumers can work with simple hypermedia formats, and yet can treat them (mostly) as plain JSON. As one aspect of the general design goal, HAL minimizes the constraints it puts on the format.</t>
            <t>The way hypermedia links are represented in HAL is inspired by Web Linking <xref target="RFC8288"/>, where links are typed, and the link relation type is either a simple string, or a URI. HAL introduces a mechanism that is called a "curie" (but is not in fact the CURIE concept as standardized in a specification of this name). Using the "curie" mechanism, HAL supports a shorthand notation for link relation types, allowing HAL to represent link relation types that are in fact URIs in a prefix-based notation. The following example from the HAL specification illustrates the mechanism:</t>
            <figure>
                <artwork type="json">{
  "_links": {
    "self": { "href": "/orders" },
    "curies": [{
      "name": "acme",
      "href": "http://docs.acme.com/relations/{rel}",
      "templated": true
    }],
    "acme:widgets": { "href": "/widgets" }
  }
}</artwork>
            </figure>
            <t>In this example, the effective link relation type is "http://docs.acme.com/relations/widgets", with the "acme:widgets" link using the shorthand notation for its link relation type.</t>
            <t>The problem is that HAL makes resolving these templated link relations optional. This means that based on HAL, it is permissible to interpret the link relation as being "http://docs.acme.com/relations/widgets" or "acme:widgets".</t>
            <t>As a result, some consumers of this HAL service may interpret the link as having the link relation "acme:widgets". If these consumers store the link or start exposing it in any way, the original identity of the link relation ("http://docs.acme.com/relations/widgets") is lost. Not only is the identity lost, it also cannot be restored, because the binding to the prefix definition likely will get lost if the HAL representation is not preserved or forwarded directly, but instead programming logic extracts links and their link relation types, and then stores those or constructs new representations.</t>
            <t>The bigger effect of this is that link relations as defined by Web Linking <xref target="RFC8288"/> are not reliably processed in a landscape of service providers and consumers where HAL's "curie" mechanism is used. Link relations can use their identity, which creates interoperability problem throughout the landscape.</t>
        </section>
        <section title="WebHAL as a Safe HAL Profile" anchor="webhal">
            <t>To avoid the ambiguities and potential problems mentioned in the previous section, HAL can be used in a way which strictly avoids the use of the "curie" mechanism. This can be done within the limitations of the HAL format, since using "curie" is optional, and every HAL document using this feature can be transformed into an equivalent HAL document that does not use the feature (as shown in Section <xref target="hal-to-webhal"/>).</t>
            <t>As discussed in Section <xref target="problem-statement"/>, the problematic part of HAL is the "curie" mechanism and its ambiguous way of defining a link's relation type. Since the "curie" mechanism is optional in HAL, it can be ignored. And since all it does is defining the shorthand mechanism, there is no loss in expressivity, because all link relation types can still be represented, only this time without using the shorthand notation.</t>
            <t>Using this simple approach, the example shown in the previous section can also be represented as follows:</t>
            <figure>
                <artwork type="json">{
  "_links": {
    "self": { "href": "/orders" },
    "http://docs.acme.com/relations/widgets": { "href": "/widgets" }
  }
}</artwork>
            </figure>
            <t>This example is valid HAL and it communicates the exact same hypermedia information. The only difference is that by avoiding the shorthand notation, this example now also avoids the possibility to be interpreted in a way where the link relation type is something other than the full URI.</t>
            <t>HAL supports profiles in the sense that HAL acknowledges the fact that HAL can be accompanied by a profile identifier <xref target="RFC6906"/>. Such a profile identifier can be used in a "profile" media type parameter defined by HAL, and/or it can be embedded as a "profile" link in the HAL document. In the latter case, the profile identifier shows up like any other link in HAL, and it is identified by the "profile" link relation type.</t>
            <figure>
                <artwork type="json">{
  "_links": {
    "self": { "href": "/orders" },
    "profile": { "href": "urn:ietf:rfc:XXXX" },
    "http://docs.acme.com/relations/widgets": { "href": "/widgets" }
  }
}</artwork>
            </figure>
            <t>This HAL document makes it explicit that it is using the WebHAL profile, by including an explicit "profile" link in the HAL document. This is not necessary for a HAL document to be WebHAL, but it can make it easier for implementations to discover the fact that a HAL document claims to be WebHAL.</t>
        </section>
        <section title="WebHAL Profile" anchor="webhal-profile">
            <t>...</t>
        </section>
        <section title="Converting HAL to WebHAL" anchor="hal-to-webhal">
            <t>...</t>
            <t>Software generating WebHAL SHOULD add a link with the "profile" link relation type and the URI "urn:ietf:rfc:XXXX" to the link object of the root resource.</t>
        </section>
        <section title="IANA Considerations" anchor="IANA">
            <t>The Profile URI below has been registered by IANA per RFC 7284 <xref target="RFC7284"/>:</t>
        </section>
    </middle>
    <back>
        <references title="Normative References">
            <reference  anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
                <front>
                    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
                    <author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
                    <date year='1997' month='March' />
                    <abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
                </front>
                <seriesInfo name='BCP' value='14'/>
                <seriesInfo name='RFC' value='2119'/>
                <seriesInfo name='DOI' value='10.17487/RFC2119'/>
            </reference>
            <reference  anchor='RFC6906' target='https://www.rfc-editor.org/info/rfc6906'>
                <front>
                    <title>The 'profile' Link Relation Type</title>
                    <author initials='E.' surname='Wilde' fullname='E. Wilde'><organization /></author>
                    <date year='2013' month='March' />
                    <abstract><t>This specification defines the 'profile' link relation type that allows resource representations to indicate that they are following one or more profiles.  A profile is defined not to alter the semantics of the resource representation itself, but to allow clients to learn about additional semantics (constraints, conventions, extensions) that are associated with the resource representation, in addition to those defined by the media type and possibly other mechanisms.</t></abstract>
                </front>
                <seriesInfo name='RFC' value='6906'/>
                <seriesInfo name='DOI' value='10.17487/RFC6906'/>
            </reference>
            <reference  anchor='RFC8288' target='https://www.rfc-editor.org/info/rfc8288'>
                <front>
                    <title>Web Linking</title>
                    <author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
                    <date year='2017' month='October' />
                    <abstract><t>This specification defines a model for the relationships between resources on the Web (&quot;links&quot;) and the type of those relationships (&quot;link relation types&quot;).</t><t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t></abstract>
                </front>
                <seriesInfo name='RFC' value='8288'/>
                <seriesInfo name='DOI' value='10.17487/RFC8288'/>
            </reference>
        </references>
<!--
      <references title="Informative References">
      </references>
 -->
             <!--
      <section title="Acknowledgements">
         <t>Thanks for comments and suggestions provided by Mark Nottingham, ...</t>
      </section>
-->
    </back>
</rfc>
